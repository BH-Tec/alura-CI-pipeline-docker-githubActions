name: kubernetes

on:
  workflow_call:

jobs:

  eks:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v3

      - name: configurando credenciais da aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      
      - name: clonando repositorio do github
        run: git clone https://github.com/BH-Tec/alura-formacao-ci-cd-kubernetes.git

      - name: hashiCorp - setup terraform
        uses: hashicorp/setup-terraform@v2.0.3

      - name: iniciando o terraform
        run: terraform -chdir=alura-formacao-ci-cd-kubernetes/env/Homolog init

      #
      - name: remove o terraform e impede de criar novamente.
        run: terraform -chdir=Infra_CI_Kubernetes/env/Homolog destroy -auto-approve
      - run: return 1
      #

      - run: terraform -chdir=alura-formacao-ci-cd-kubernetes/env/Homolog apply -auto-approve

      - run: echo "$(terraform -chdir=alura-formacao-ci-cd-kubernetes/env/Homolog output -raw IP_db)"
        id: URL
      
      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v3

      - run: aws sts get-caller-identity

      - run: aws eks update-kubeconfig --region us-east-2 --name homolog2

      - run: kubectl get svc

      - run: kubectl delete secrets dbhost  --ignore-not-found
      - run: kubectl create secret generic dbhost --from-literal=HOST=${{ steps.URL.outputs.stdout }}

      - run: kubectl delete secrets dbport  --ignore-not-found
      - run: kubectl create secret generic dbport --from-literal=DBPORT=${{ secrets.DBPORT }}

      - run: kubectl delete secrets dbuser  --ignore-not-found
      - run: kubectl create secret generic dbuser --from-literal=USER=${{ secrets.DBUSER }}

      - run: kubectl delete secrets dbpassword  --ignore-not-found
      - run: kubectl create secret generic dbpassword --from-literal=PASSWORD=${{ secrets.DBPASSWORD }}

      - run: kubectl delete secrets dbname  --ignore-not-found
      - run: kubectl create secret generic dbname --from-literal=DBNAME=${{ secrets.DBNAME }}

      - run: kubectl delete secrets port  --ignore-not-found
      - run: kubectl create secret generic port --from-literal=PORT=8000

      - run: kubectl apply -f alura-formacao-ci-cd-kubernetes/go.yaml

      - run: kubectl set image deployment/go-api go=brunooooooohenri/go_ci:${{ github.run_number }}