name: ECS

on:
  workflow_call:

jobs:

  ecs:
      runs-on: ubuntu-latest
      steps:
      - name: configurando credenciais da aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: obtendo arquivo da tarefa
        run: aws ecs describe-task-definition --task-definition Tarefa-API-Go --query taskDefinition > task-definition.json

      - name: copia do task definition
        run: cp task-definition.json task-definition.json.old

      - name: colocar nova id de imagem na tarefa de definição da ECS
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: Go
          image: brunooooooohenri/go_ci:${{ github.run_number }}
          environment-variables: |
            HOST=${{ secrets.DBHOST }}
            USER=${{ secrets.DBUSER }}
            PASSWORD=${{ secrets.DBPASSWORD }}
            DBNAME=${{ secrets.DBNAME }}
            DBPORT=${{ secrets.DBPORT }}
            PORT=8000

      - name: deploy da definição da tarefa na Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: Servico-API-Go
          cluster: API-Go-Dev
          wait-for-service-stability: true

      # necessario retornar para criar o load balance
      - name: requisição
        continue-on-error: true
        run: echo "REQUEST=0" >> $GITHUB_ENV ; sleep 30s ; wget LB-API-Go-1245125115.us-east-1.elb.amazonaws.com:8000/bruno || echo "REQUEST=1" >> $GITHUB_ENV

      - name: rollback - deploy da definição da tarefa na Amazon ECS
        if: ${{ env.REQUEST != 0 }}
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: task-definition.json.old
          service: Servico-API-Go
          cluster: API-Go-Dev
          wait-for-service-stability: true